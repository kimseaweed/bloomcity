import * as _nuxt_schema from '@nuxt/schema';
import * as type_fest_source_partial_deep from 'type-fest/source/partial-deep';

declare const _default: _nuxt_schema.NuxtModule<Partial<{
    defaultProps: Partial<{
        tag: string;
        group: boolean;
        appear: boolean | undefined;
        mode: "in-out" | "out-in" | undefined;
        duration: number | {
            enter: number;
            leave: number;
        };
        delay: number | {
            enter: number;
            leave: number;
        };
        easing: string | {
            enter: string;
            leave: string;
        };
        moveDuration: number;
        noOpacity: boolean;
        noMove: boolean;
    }>;
    componentDefaultProps: type_fest_source_partial_deep.PartialObjectDeep<type_fest_source_partial_deep.PartialObjectDeep<{
        TransitionFade: {
            tag: string;
            group: boolean;
            appear: boolean | undefined;
            mode: "in-out" | "out-in" | undefined;
            duration: number | {
                enter: number;
                leave: number;
            };
            delay: number | {
                enter: number;
                leave: number;
            };
            easing: string | {
                enter: string;
                leave: string;
            };
            moveDuration: number;
            noOpacity: boolean;
            noMove: boolean;
        };
        TransitionExpand: {
            tag: string;
            group: boolean;
            appear: boolean | undefined;
            mode: "in-out" | "out-in" | undefined;
            duration: number | {
                enter: number;
                leave: number;
            };
            delay: number | {
                enter: number;
                leave: number;
            };
            easing: string | {
                enter: string;
                leave: string;
            };
            moveDuration: number;
            noOpacity: boolean;
            noMove: boolean;
        } & {
            axis: ("x" | "y") | {
                enter: "x" | "y";
                leave: "x" | "y";
            };
        };
        TransitionSlide: {
            tag: string;
            group: boolean;
            appear: boolean | undefined;
            mode: "in-out" | "out-in" | undefined;
            duration: number | {
                enter: number;
                leave: number;
            };
            delay: number | {
                enter: number;
                leave: number;
            };
            easing: string | {
                enter: string;
                leave: string;
            };
            moveDuration: number;
            noOpacity: boolean;
            noMove: boolean;
        } & {
            offset: [string | number, string | number] | {
                enter: [string | number, string | number];
                leave: [string | number, string | number];
            };
        };
        TransitionScale: {
            tag: string;
            group: boolean;
            appear: boolean | undefined;
            mode: "in-out" | "out-in" | undefined;
            duration: number | {
                enter: number;
                leave: number;
            };
            delay: number | {
                enter: number;
                leave: number;
            };
            easing: string | {
                enter: string;
                leave: string;
            };
            moveDuration: number;
            noOpacity: boolean;
            noMove: boolean;
        } & {
            axis: ("x" | "y" | "both") | {
                enter: "x" | "y" | "both";
                leave: "x" | "y" | "both";
            };
            origin: string | {
                enter: string;
                leave: string;
            };
            scale: number | {
                enter: number;
                leave: number;
            };
        };
    }, {}>, {}>;
}>>;

export { _default as default };
