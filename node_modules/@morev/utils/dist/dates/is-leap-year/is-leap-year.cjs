"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/dates/is-leap-year/is-leap-year.ts
var is_leap_year_exports = {};
__export(is_leap_year_exports, {
  isLeapYear: () => isLeapYear
});
module.exports = __toCommonJS(is_leap_year_exports);

// src/guards/is-date/is-date.ts
var isDate = (value, checkValidity) => {
  const isDateObject = Object.prototype.toString.call(value).includes("Date");
  if (!isDateObject)
    return false;
  if (!checkValidity)
    return isDateObject;
  return !Number.isNaN(value.getTime());
};

// src/guards/is-string/is-string.ts
var isString = (value) => Object.prototype.toString.call(value) === "[object String]";

// src/guards/is-integer/is-integer.ts
var isInteger = (value) => Number.isInteger(value);

// src/guards/is-null/is-null.ts
var isNull = (value) => value === null;

// src/dates/is-leap-year/is-leap-year.ts
var isLeapYear = (value) => {
  const year = (() => {
    if (isInteger(value))
      return value;
    if (isString(value)) {
      const maybeNumber = +value;
      return Number.isNaN(maybeNumber) ? null : maybeNumber;
    }
    if (isDate(value, true))
      return value.getFullYear();
    return null;
  })();
  if (isNull(year))
    return false;
  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  isLeapYear
});
