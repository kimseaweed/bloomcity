"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/math/angle/angle.ts
var angle_exports = {};
__export(angle_exports, {
  angle: () => angle
});
module.exports = __toCommonJS(angle_exports);

// src/guards/is-array/is-array.ts
var isArray = (value) => Array.isArray(value);

// src/guards/is-object/is-object.ts
var isObject = (value) => Object.prototype.toString.call(value).includes("Object");

// src/guards/is-numeric/is-numeric.ts
var isNumeric = (value) => typeof value === "number" && !isNaN(value);

// src/guards/is-null/is-null.ts
var isNull = (value) => value === null;

// src/math/angle/angle.ts
function angle(arg1, arg2, arg3, arg4) {
  const [p1, p2] = (() => {
    if (isObject(arg1) && isObject(arg2)) {
      return [[arg1.x, arg1.y], [arg2.x, arg2.y]];
    }
    if (isArray(arg1) && isArray(arg2)) {
      return [arg1, arg2];
    }
    if (isNumeric(arg1) && isNumeric(arg2) && isNumeric(arg3) && isNumeric(arg4)) {
      return [[arg1, arg2], [arg3, arg4]];
    }
    return [null, null];
  })();
  if (isNull(p1) || isNull(p2))
    return null;
  const [[x1, y1], [x2, y2]] = [p1, p2];
  const [dx, dy] = [x2 - x1, y2 - y1];
  const theta = Math.atan2(dx, dy) * 180 / Math.PI;
  return theta < 0 ? theta + 360 : theta;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  angle
});
