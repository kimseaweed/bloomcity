"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/colors/normalize-hex/normalize-hex.ts
var normalize_hex_exports = {};
__export(normalize_hex_exports, {
  normalizeHex: () => normalizeHex
});
module.exports = __toCommonJS(normalize_hex_exports);

// src/guards/is-string/is-string.ts
var isString = (value) => Object.prototype.toString.call(value) === "[object String]";

// src/guards/is-hex/is-hex.ts
var isHex = (value) => {
  if (!isString(value))
    return false;
  return /^#(?:[\da-f]{8}|[\da-f]{6}|[\da-f]{4}|[\da-f]{3})$/i.test(value.toLowerCase());
};

// src/guards/is-null/is-null.ts
var isNull = (value) => value === null;

// src/guards/is-undefined/is-undefined.ts
var isUndefined = (value) => value === void 0;

// src/guards/is-nullish/is-nullish.ts
var isNullish = (value) => isNull(value) || isUndefined(value);

// src/colors/colors.utils.ts
var SHORT_HEX_REG_EXP = /^#([\da-f])([\da-f])([\da-f])([\da-f])?$/m;
var LONG_HEX_REG_EXP = /^#([\da-f]{2})([\da-f]{2})([\da-f]{2})([\da-f]{0,2})$/m;

// src/colors/normalize-hex/normalize-hex.ts
var DEFAULT_OPTIONS = {
  notation: "long",
  alphaChannel: "always"
};
var normalizeHex = (hex, userOptions) => {
  hex = hex.trim().toLowerCase();
  if (!isHex(hex))
    return null;
  const options = { ...DEFAULT_OPTIONS, ...userOptions };
  const isShort = hex.length === 4 || hex.length === 5;
  const hasAlphaChannel = hex.length === 5 || hex.length === 9;
  const shouldAddAlphaChannel = options.alphaChannel === "always" || options.alphaChannel === "if-presented" && hasAlphaChannel;
  const parts = hex.replace(
    isShort ? SHORT_HEX_REG_EXP : LONG_HEX_REG_EXP,
    (_, r2, g2, b2, a2) => {
      if (isShort) {
        const alpha2 = !isNullish(a2) ? `${a2}${a2}` : `ff`;
        return `${r2}${r2}${g2}${g2}${b2}${b2}${alpha2}`;
      }
      return `${r2}${g2}${b2}${a2 || "ff"}`;
    }
  ).match(/.{2}/g);
  const [r, g, b, a] = parts;
  const rgb = options.notation === "short" ? (() => {
    const toCheck = [r, g, b, shouldAddAlphaChannel ? a : null].filter(Boolean);
    return toCheck.some((part) => !part.startsWith(part[1])) ? `#${r}${g}${b}` : `#${r[0]}${g[0]}${b[0]}`;
  })() : `#${r}${g}${b}`;
  if (!shouldAddAlphaChannel)
    return rgb;
  const alpha = rgb.length === 7 ? a : a[0];
  return `${rgb}${alpha}`;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  normalizeHex
});
