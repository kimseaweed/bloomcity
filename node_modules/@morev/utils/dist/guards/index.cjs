"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/guards/index.ts
var guards_exports = {};
__export(guards_exports, {
  isArray: () => isArray,
  isBlob: () => isBlob,
  isBoolean: () => isBoolean,
  isDate: () => isDate,
  isElement: () => isElement,
  isEmail: () => isEmail,
  isEmpty: () => isEmpty,
  isError: () => isError,
  isFile: () => isFile,
  isFloat: () => isFloat,
  isFormData: () => isFormData,
  isFunction: () => isFunction,
  isHex: () => isHex,
  isInteger: () => isInteger,
  isIterable: () => isIterable,
  isLocalStorageAvailable: () => isLocalStorageAvailable,
  isMap: () => isMap,
  isNode: () => isNode,
  isNull: () => isNull,
  isNullish: () => isNullish,
  isNumeric: () => isNumeric,
  isObject: () => isObject,
  isPlainObject: () => isPlainObject,
  isPrimitive: () => isPrimitive,
  isPromise: () => isPromise,
  isRegExp: () => isRegExp,
  isSessionStorageAvailable: () => isSessionStorageAvailable,
  isString: () => isString,
  isSymbol: () => isSymbol,
  isUndefined: () => isUndefined,
  isWeakMap: () => isWeakMap
});
module.exports = __toCommonJS(guards_exports);

// src/guards/is-array/is-array.ts
var isArray = (value) => Array.isArray(value);

// src/guards/is-blob/is-blob.ts
var isBlob = (value) => {
  if (typeof Blob === "undefined")
    return false;
  return value instanceof Blob || Object.prototype.toString.call(value).includes("Blob");
};

// src/guards/is-boolean/is-boolean.ts
var isBoolean = (value) => value === true || value === false;

// src/guards/is-date/is-date.ts
var isDate = (value, checkValidity) => {
  const isDateObject = Object.prototype.toString.call(value).includes("Date");
  if (!isDateObject)
    return false;
  if (!checkValidity)
    return isDateObject;
  return !Number.isNaN(value.getTime());
};

// src/guards/is-element/is-element.ts
var isElement = (value) => value instanceof Element;

// src/guards/is-string/is-string.ts
var isString = (value) => Object.prototype.toString.call(value) === "[object String]";

// src/guards/is-email/is-email.ts
var isEmail = (value) => isString(value) && /^(([^\s"(),.:;<>@[\\\]]+(\.[^\s"(),.:;<>@[\\\]]+)*)|(".+"))@((\[(?:\d{1,3}\.){3}\d{1,3}])|(([\d\-A-Za-zЁА-яё]+\.)+[A-Za-zЁА-яё]{2,}))$/.test(value);

// src/guards/is-iterable/is-iterable.ts
var isIterable = (value) => (
  // eslint-disable-next-line unicorn/new-for-builtins
  Symbol.iterator in Object(value)
);

// src/guards/is-object/is-object.ts
var isObject = (value) => Object.prototype.toString.call(value).includes("Object");

// src/guards/is-empty/is-empty.ts
var isEmpty = (value) => {
  if (value === void 0)
    return true;
  if (value === null)
    return true;
  if (value === false)
    return true;
  if (Number.isNaN(value))
    return true;
  if (value === 0)
    return true;
  if (value === BigInt(0))
    return true;
  if (value === "")
    return true;
  if (isIterable(value) && typeof value === "object" && "length" in value && value.length === 0)
    return true;
  if (isIterable(value) && typeof value === "object" && "size" in value && value.size === 0)
    return true;
  if (isObject(value))
    return !Object.keys(value).length;
  return false;
};

// src/guards/is-error/is-error.ts
var isError = (value) => value instanceof Error;

// src/guards/is-file/is-file.ts
var isFile = (value) => {
  if (typeof File === "undefined")
    return false;
  return value instanceof File || Object.prototype.toString.call(value).includes("File");
};

// src/guards/is-numeric/is-numeric.ts
var isNumeric = (value) => typeof value === "number" && !isNaN(value);

// src/guards/is-float/is-float.ts
var isFloat = (value) => isNumeric(value) && value % 1 !== 0;

// src/guards/is-form-data/is-form-data.ts
var isFormData = (value) => value instanceof FormData;

// src/guards/is-function/is-function.ts
var isFunction = (value) => Object.prototype.toString.call(value) === "[object Function]";

// src/guards/is-hex/is-hex.ts
var isHex = (value) => {
  if (!isString(value))
    return false;
  return /^#(?:[\da-f]{8}|[\da-f]{6}|[\da-f]{4}|[\da-f]{3})$/i.test(value.toLowerCase());
};

// src/guards/is-integer/is-integer.ts
var isInteger = (value) => Number.isInteger(value);

// src/guards/is-local-storage-available/is-local-storage-available.ts
var TEST_KEY = "__TEST_KEY__";
var isLocalStorageAvailable = () => {
  if (typeof localStorage === "undefined")
    return false;
  try {
    localStorage.setItem(TEST_KEY, "value");
    localStorage.removeItem(TEST_KEY);
    return true;
  } catch {
    return false;
  }
};

// src/guards/is-map/is-map.ts
var isMap = (value) => value instanceof Map;

// src/guards/is-node/is-node.ts
var isNode = (value) => value instanceof Node;

// src/guards/is-null/is-null.ts
var isNull = (value) => value === null;

// src/guards/is-undefined/is-undefined.ts
var isUndefined = (value) => value === void 0;

// src/guards/is-nullish/is-nullish.ts
var isNullish = (value) => isNull(value) || isUndefined(value);

// src/guards/is-plain-object/is-plain-object.ts
var isPlainObject = (value) => {
  if (!isObject(value))
    return false;
  const prototype = Object.getPrototypeOf(value);
  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);
};

// src/guards/is-primitive/is-primitive.ts
var isPrimitive = (value) => {
  if (isNullish(value))
    return true;
  return !["object", "function"].includes(typeof value);
};

// src/guards/is-promise/is-promise.ts
var isPromise = (value) => value instanceof Promise;

// src/guards/is-reg-exp/is-reg-exp.ts
var isRegExp = (value) => Object.prototype.toString.call(value) === "[object RegExp]";

// src/guards/is-session-storage-available/is-session-storage-available.ts
var TEST_KEY2 = "__TEST_KEY__";
var isSessionStorageAvailable = () => {
  if (typeof sessionStorage === "undefined")
    return false;
  try {
    sessionStorage.setItem(TEST_KEY2, "value");
    sessionStorage.removeItem(TEST_KEY2);
    return true;
  } catch {
    return false;
  }
};

// src/guards/is-symbol/is-symbol.ts
var isSymbol = (value) => typeof value === "symbol" || typeof value === "object" && Object.prototype.toString.call(value).includes("Symbol");

// src/guards/is-weak-map/is-weak-map.ts
var isWeakMap = (value) => value instanceof WeakMap;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  isArray,
  isBlob,
  isBoolean,
  isDate,
  isElement,
  isEmail,
  isEmpty,
  isError,
  isFile,
  isFloat,
  isFormData,
  isFunction,
  isHex,
  isInteger,
  isIterable,
  isLocalStorageAvailable,
  isMap,
  isNode,
  isNull,
  isNullish,
  isNumeric,
  isObject,
  isPlainObject,
  isPrimitive,
  isPromise,
  isRegExp,
  isSessionStorageAvailable,
  isString,
  isSymbol,
  isUndefined,
  isWeakMap
});
