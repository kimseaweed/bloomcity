"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/arrays/arrays-difference/arrays-difference.ts
var arrays_difference_exports = {};
__export(arrays_difference_exports, {
  arraysDifference: () => arraysDifference
});
module.exports = __toCommonJS(arrays_difference_exports);

// src/arrays/arrays-intersection/arrays-intersection.ts
var arraysIntersection = (...arrays) => arrays.reduce((acc, array) => acc.filter((i) => array.includes(i)));

// src/arrays/arrays-union/arrays-union.ts
var arraysUnion = (...arrays) => [...new Set(arrays.flat())];

// src/arrays/arrays-difference/arrays-difference.ts
var arraysDifference = (...arrays) => {
  const intersections = arraysIntersection(...arrays);
  return arraysUnion(...arrays.map((array) => array.filter((i) => !intersections.includes(i))));
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  arraysDifference
});
