"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/functions/verify-file-accept/verify-file-accept.ts
var verify_file_accept_exports = {};
__export(verify_file_accept_exports, {
  verifyFileAccept: () => verifyFileAccept
});
module.exports = __toCommonJS(verify_file_accept_exports);
var verifyFileAccept = (file, accept) => {
  if (!accept)
    return true;
  const parts = accept.split(",").map((part) => part.trim());
  const extensionParts = parts.filter((part) => part.startsWith("."));
  const mimeParts = parts.filter((part) => !part.startsWith(".")).join(",");
  const mimeResult = mimeParts ? new RegExp(mimeParts.replaceAll("*", ".*").replaceAll(",", "|")).test(file.type) : false;
  return mimeResult || extensionParts.some((part) => file.name.endsWith(part));
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  verifyFileAccept
});
