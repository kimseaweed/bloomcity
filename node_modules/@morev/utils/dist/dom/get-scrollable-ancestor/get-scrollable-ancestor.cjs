"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/dom/get-scrollable-ancestor/get-scrollable-ancestor.ts
var get_scrollable_ancestor_exports = {};
__export(get_scrollable_ancestor_exports, {
  getScrollableAncestor: () => getScrollableAncestor
});
module.exports = __toCommonJS(get_scrollable_ancestor_exports);
var getScrollableAncestor = (element, axis = "both") => {
  let el = element;
  while (el?.parentElement) {
    el = el.parentElement;
    if (el === document.body)
      return window;
    if (el === document.documentElement)
      return window;
    const styles = window.getComputedStyle(el);
    const toCheck = [];
    ["both", "x"].includes(axis) && toCheck.push(styles.getPropertyValue("overflow-x"));
    ["both", "y"].includes(axis) && toCheck.push(styles.getPropertyValue("overflow-y"));
    const isScrollable = toCheck.some((val) => ["auto", "scroll"].includes(val));
    if (isScrollable)
      return el;
  }
  return window;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getScrollableAncestor
});
