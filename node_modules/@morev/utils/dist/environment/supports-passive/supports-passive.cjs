"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/environment/supports-passive/supports-passive.ts
var supports_passive_exports = {};
__export(supports_passive_exports, {
  supportsPassive: () => supportsPassive
});
module.exports = __toCommonJS(supports_passive_exports);
var supportsPassive = () => {
  let supports = false;
  const options = Object.defineProperty({}, "passive", {
    get() {
      supports = true;
      return null;
    }
  });
  try {
    const noop = () => {
    };
    window.addEventListener("test:passive", noop, options);
    window.removeEventListener("test:passive", noop, options);
  } catch {
  }
  return supports;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  supportsPassive
});
