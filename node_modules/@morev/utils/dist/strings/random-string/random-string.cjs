"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/strings/random-string/random-string.ts
var random_string_exports = {};
__export(random_string_exports, {
  randomString: () => randomString
});
module.exports = __toCommonJS(random_string_exports);

// src/guards/is-integer/is-integer.ts
var isInteger = (value) => Number.isInteger(value);

// src/arrays/array-of-length/array-of-length.ts
var arrayOfLength = (length, mapFunction) => {
  const neededLength = isInteger(length) && length > 0 ? length : 0;
  const arr = new Array(neededLength).fill(void 0);
  return mapFunction ? arr.map((_, index) => mapFunction(index)) : arr;
};

// src/strings/random-string/random-string.ts
var randomString = (length = 10, startWithLatin = true) => {
  const base = arrayOfLength(length, () => Math.trunc(Math.random() * 36).toString(36)).join("");
  if (!startWithLatin)
    return base;
  const latinCharacters = "abcdefghijklmnopqrstuvwxyz";
  const firstChar = latinCharacters.charAt(Math.floor(Math.random() * latinCharacters.length));
  return firstChar + base.slice(1);
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  randomString
});
